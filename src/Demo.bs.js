// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';


console.log("Hello, BuckleScript and Reason!");

var newScore = 20;

console.log("Enjoying the docs so far?");

console.log("hello");

console.log("bye");

var message = "hello world";

console.log(message);

function add(x, y) {
  return x + y | 0;
}

var greetingAndOneSlash = "Hello\n    World\n    \\\n    Hehe...\n    ";

console.log(greetingAndOneSlash);

var world = "世界";

var helloWorld = "你好，" + (String(world) + "");

console.log(helloWorld);

var me = /* record */[
  /* age */5,
  /* name */"Big Reason"
];

var meNextYear = /* record */[
  /* age */6,
  /* name */"Big Reason"
];

console.log(me);

console.log(meNextYear);

var baby = /* record */[
  /* name */"Baby Reason",
  /* age */5
];

baby[/* age */1] = baby[/* age */1] + 1 | 0;

console.log(baby);

var someHorsePower = /* record */[
  /* power */10,
  /* metric */true
];

var displayGreeting = true;

var score = 10;

var myInt = 9;

var x = 10;

var greeting = "Hello world!";

var multilineGreeting = "Hello\n world!";

var greetings = "Hello world!";

var firstLetterOfAlphabet = /* "a" */97;

var ageAndName = /* tuple */[
  24,
  "Lil' Reason"
];

var my3dCoordinates = /* tuple */[
  20.0,
  30.5,
  100.0
];

var y = 30.5;

var name = "Big Reason";

var metric = true;

exports.newScore = newScore;
exports.displayGreeting = displayGreeting;
exports.message = message;
exports.score = score;
exports.myInt = myInt;
exports.add = add;
exports.x = x;
exports.greeting = greeting;
exports.multilineGreeting = multilineGreeting;
exports.greetings = greetings;
exports.greetingAndOneSlash = greetingAndOneSlash;
exports.world = world;
exports.helloWorld = helloWorld;
exports.firstLetterOfAlphabet = firstLetterOfAlphabet;
exports.ageAndName = ageAndName;
exports.my3dCoordinates = my3dCoordinates;
exports.y = y;
exports.me = me;
exports.name = name;
exports.meNextYear = meNextYear;
exports.baby = baby;
exports.metric = metric;
exports.someHorsePower = someHorsePower;
/*  Not a pure module */
